@inject SignInManager<applicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Thông tin tài khoản</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link" href="/UserOrder/myOrder">Đơn hàng của tôi</a></li>
    @if (SignInManager.IsSignedIn(User))
    {
     
        @if (User.IsInRole("User") && User.IsInRole("Saler"))
        {
            <li class="nav-item"><a class="nav-link" asp-area="Saler" asp-controller="daskboard" >Trang quản lí người bán hàng</a></li>
        }
        else
        {
            @if (User.IsInRole("User"))
            {
                <li class="nav-item"><a class="nav-link" asp-controller="WSaler" asp-action="wantToSaler">Đăng kí bán hàng</a></li>
            }
        
        }

    }
  

</ul>
