@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Bootstrap4.Core;
@model X.PagedList.IPagedList<product>
@{

}
<div class="banner">
    <div class="swiper mySwiper">
        <div class="swiper-wrapper">
            @await Component.InvokeAsync("banner")
        </div>
        <div class="swiper-pagination"></div>
    </div>
</div>
<div class="main-product">
    <div class="container-web">
        <div class="head-product">
            <div class="title-component-cate">Danh mục: </div>
            <div class="list-component-cate">
                @await Component.InvokeAsync("Categories")
            </div>
            <div class="state-component-cate"></div>
           
        </div>
        <div class="list-product">
            
            @foreach (var product in Model)
            {
                
                    <div class="item-product">
                        <div class="img-box">
                            <img src="/images/@product.imageUrl" alt="...">
                        </div>

                        <div class="card-body">
                            <h5 class="card-title">@product.productName</h5>
                            <div class="card-detail">
                                <p class="card-text">@product.price vnđ</p>
                                <span class="card-rate">4.5<i class="fa-solid fa-star"></i></span>
                            </div>
                            <div class="box-button">
                                <a class="wrap-btn detail" asp-action="Details" asp-route-id="@product.Id">Chi tiết</a>
                                <button type="button" onclick="AddItem(@product.Id)" class="wrap-btn add"><i class="bi bi-cart-plus"></i><sapn>Thêm</sapn></button>
                            </div>
                        </div>
                    </div>
                
            }
        </div>
        <div class="foot-product">
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page=page ,maloai=ViewBag.maloai}),Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
        </div>
        
    </div>
</div>




@section Scripts{
    <script>
        async function AddItem(productId) {

            var usernameEl = document.getElementById("username");

            if (usernameEl == null) {
                window.location.href = "/Identity/Account/Login";
            }
            try {
                var response = await fetch(`/Cart/AddItem?productId=${productId}`);

                if (response.status == 200) {
                    var result = await response.json();
                    console.log(result);
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                    window.location.href = "#cartCount"
                }
            }
            catch (err) {
                console.log(err);
            }
        }
    </script>
    <script>
        var swiper = new Swiper(".mySwiper", {
            slidesPerView: 1,
            spaceBetween: 30,
            loop: true,
            pagination: {
                el: ".swiper-pagination",
                clickable: true,
            }
        });
    </script>
    <script>
        var libtn = document.getElementsByTagName("li");
        document.getElementsByTagName("li").onclick() = function () {
            colortocate();
        }
        function colortocate(){
            libtn.style.backgroundColor = "red";
        }
    </script>
        }


